######################################################################
# Automatically generated by qmake (3.0) ?? 2? 21 22:25:40 2013
######################################################################

TEMPLATE = app
TARGET = DkVerwaltungQt
DEPENDPATH += .
INCLUDEPATH += .

win32:CONFIG -= debug_and_release

APP_RESOURCES_FILES.files = ./Jahreskontoauszug.html ./Zinsbescheinigung.html ./F13TurleyGmbH2.gif ./sendDKJAKtos.py ./printCommandDescription.sh ./mail-content.txt
APP_RESOURCES_FILES.path = Contents/Resources

QMAKE_BUNDLE_DATA += APP_RESOURCES_FILES

# macx:ICON = $${TARGET}.icns
# macx:QMAKE_INFO_PLIST = Info.plist

CONFIG( release, debug|release ){
   # Release verwendet kein shadow-build, deshalb muss man den macdeployqt Aufruf nicht anpassen
   macx:QMAKE_POST_LINK += $$[QT_INSTALL_BINS]/macdeployqt $${TARGET}.app -dmg
}else{
   # Debug verwendet shadow-build, deshalb m√ºsste man den macdeployqt Aufruf anpassen
   # macx:QMAKE_POST_LINK += $$[QT_INSTALL_BINS]/macdeployqt $${TARGET}.app -no-strip # -use-debug-libs
}


QMAKE_POST_LINK = echo starting post link steps...

QMAKE_POST_LINK +=  && set -x
QMAKE_POST_LINK +=  && rm -fr $${OUT_PWD}/appdir

COPY=cp
win32:COPY=copy
QMAKE_POST_LINK +=  && $${COPY} $${PWD}/Jahreskontoauszug.html $${OUT_PWD}/
QMAKE_POST_LINK +=  && $${COPY} $${PWD}/Zinsbescheinigung.html $${OUT_PWD}/
QMAKE_POST_LINK +=  && $${COPY} $${PWD}/F13TurleyGmbH2.gif $${OUT_PWD}/
QMAKE_POST_LINK +=  && $${COPY} $${PWD}/mail-content.txt $${OUT_PWD}/

macx:QMAKE_POST_LINK +=  && $${COPY} $${PWD}/sendDKJAKtos.py $${OUT_PWD}/
macx:QMAKE_POST_LINK +=  && $${COPY} $${PWD}/printCommandDescription.sh $${OUT_PWD}/

if(true) {
    unix:!macx::QMAKE_POST_LINK +=  && $${PWD}/deploylinux.sh $${OUT_PWD}
} else {
# LINUX_DEPLOY_QT="/opt/linuxdeploy-x86_64.AppImage --appimage-extract-and-run "
LINUX_DEPLOY_QT="/opt/linuxdeployqt-7/squashfs-root/AppRun "
APPIMAGETOOL="/opt/appimagetool-12/squashfs-root/AppRun "

unix:!macx::QMAKE_POST_LINK +=  && mkdir -p $${OUT_PWD}/appdir/usr/bin
unix:!macx::QMAKE_POST_LINK +=  && cp $${TARGET} $${OUT_PWD}/appdir/usr/bin/
# install(FILES distri/${PROJECT_NAME}.desktop DESTINATION share/applications/)
unix:!macx::QMAKE_POST_LINK +=  && mkdir -p $${OUT_PWD}/appdir/usr/share/applications
unix:!macx::QMAKE_POST_LINK +=  && cp $${PWD}/$${TARGET}.desktop $${OUT_PWD}/appdir/usr/share/applications/

# install(FILES distri/${PROJECT_NAME}.desktop.appdata.xml DESTINATION share/metainfo/)
unix:!macx::QMAKE_POST_LINK +=  && mkdir -p $${OUT_PWD}/appdir/usr/share/metainfo
unix:!macx::QMAKE_POST_LINK +=  && cp $${PWD}/$${TARGET}.desktopappdata.xml $${OUT_PWD}/appdir/usr/share/metainfo/

# install(FILES images/logo.svg DESTINATION share/icons/hicolor/scalable/apps/ RENAME ${PROJECT_NAME}.svg)
unix:!macx::QMAKE_POST_LINK += && mkdir -p $${OUT_PWD}/appdir/usr/share/icons/hicolor/scalable/apps
unix:!macx::QMAKE_POST_LINK += && cp $${PWD}/$${TARGET}.svg $${OUT_PWD}/appdir/usr/share/icons/hicolor/scalable/apps/

# install(FILES src/icons/${PROJECT_NAME}.png DESTINATION share/icons/hicolor/256x256/apps/)
# unix:!macx::QMAKE_POST_LINK += && mkdir -p $${OUT_PWD}/appdir/usr/share/icons/hicolor/256x256/apps/
# unix:!macx::QMAKE_POST_LINK += && cp $${PWD}/$${TARGET}.svg $${OUT_PWD}/appdir/usr/share/icons/hicolor/256x256/apps/

unix:!macx::QMAKE_POST_LINK += && $${LINUX_DEPLOY_QT} $${OUT_PWD}/appdir/usr/share/applications/*.desktop -appimage -unsupported-allow-new-glibc
}

# unix:!macx::QMAKE_POST_LINK += && mv $${OUT_PWD}/appdir/$${TARGET}.AppImage $${OUT_PWD}/

QMAKE_POST_LINK += && echo finished post link steps...

# RESOURCES += $${TARGET}.qrc
# RC_FILE += $${TARGET}.rc

QT += widgets sql network
QT += webengine webenginewidgets printsupport

# Input
HEADERS += mainform.h \
    ansparrechner.h \
    html2pdfconverter.h \
    mainwindow.h \
    personform.h \
    buchungform.h \
    dbfkts.h

SOURCES += main.cpp \
    $$PWD/mainform.cpp \
    ansparrechner.cpp \
    html2pdfconverter.cpp \
    mainwindow.cpp \
    personform.cpp \
    buchungform.cpp \
    dbfkts.cpp
