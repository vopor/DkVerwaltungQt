######################################################################
# Automatically generated by qmake (3.0) ?? 2? 21 22:25:40 2013
######################################################################

TEMPLATE = app
TARGET = DkVerwaltungQt
DEPENDPATH += .
INCLUDEPATH += .

# win32:CONFIG -= debug_and_release

APP_RESOURCES_FILES.files = ./Jahreskontoauszug.html ./Zinsbescheinigung.html ./F13TurleyGmbH2.gif ./sendDKJAKtos.py ./printCommandDescription.sh ./mail-content.txt
APP_RESOURCES_FILES.files += ./importCsvIntoDkVerwaltungQt.py ./importDKV2IntoDkVerwaltungQt.py ./importDkVerwaltungQtIntoDKV2.py ./importDkVerwaltungQtIntoDkVerwaltungQt.py
APP_RESOURCES_FILES.files += ./exportDkVerwaltungQtToCsv.py ./exportDKV2ToCsv.py ./compareDkVerwaltungQtWithDKV2.py

APP_RESOURCES_FILES.path = Contents/Resources
QMAKE_BUNDLE_DATA += APP_RESOURCES_FILES

APP_TRANSLATIONS_FILES.files = $$[QT_INSTALL_TRANSLATIONS]/qt_de.qm $$[QT_INSTALL_TRANSLATIONS]/qtbase_de.qm
APP_TRANSLATIONS_FILES.path = Contents/translations
QMAKE_BUNDLE_DATA += APP_TRANSLATIONS_FILES

# macx:QMAKE_POST_LINK += mkdir -p $${OUT_PWD}/$${TARGET}.app/Contents/translations &&
# macx:QMAKE_POST_LINK += cp $$[QT_INSTALL_TRANSLATIONS]/qtbase_de.qm $${OUT_PWD}/$${TARGET}.app/Contents/translations/ &&

# macx:ICON = $${TARGET}.icns
# macx:QMAKE_INFO_PLIST = Info.plist

QMAKE_POST_LINK = echo \"starting post link steps...\"

unix:!macx:QMAKE_POST_LINK +=  && set -x
unix:!macx:QMAKE_POST_LINK +=  && rm -fr $${OUT_PWD}/appdir

unix:COPY=cp
win32:COPY=copy

TARGETDIR = $$shell_path($${OUT_PWD})

# C:\Qt\5.15.2\msvc2019\bin\qmake.exe CONFIG+=debug_and_release -tp vc
# TARGETDIR = \"$(TargetDir)\"

!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/Jahreskontoauszug.html) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/Zinsbescheinigung.html) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/F13TurleyGmbH2.gif) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/mail-content.txt) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/importCsvIntoDkVerwaltungQt.py) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/importDKV2IntoDkVerwaltungQt.py) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/importDkVerwaltungQtIntoDKV2.py) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/importDkVerwaltungQtIntoDkVerwaltungQt.py) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/exportDkVerwaltungQtToCsv.py) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/exportDKV2ToCsv.py) $${TARGETDIR}
!macx:QMAKE_POST_LINK +=  && $${COPY} $$shell_path($${PWD}/compareDkVerwaltungQtWithDKV2.py) $${TARGETDIR}

# macx:QMAKE_POST_LINK +=  && $${COPY} $${PWD}/sendDKJAKtos.py $${OUT_PWD}/
# macx:QMAKE_POST_LINK +=  && $${COPY} $${PWD}/printCommandDescription.sh $${OUT_PWD}/

CONFIG(release,debug|release) {
   unix:!macx:QMAKE_POST_LINK +=  && $${PWD}/deploylinux.sh $${OUT_PWD} $$(QTDIR)
   # Release verwendet kein shadow-build, deshalb muss man den macdeployqt Aufruf nicht anpassen
   macx:QMAKE_POST_LINK += && $$[QT_INSTALL_BINS]/macdeployqt $${TARGET}.app -dmg
}
# win32:QMAKE_POST_LINK += && echo $$[QT_INSTALL_BINS]/windeployqt $${OUT_PWD}/debug/DkVerwaltungQt.exe
# win32:QMAKE_POST_LINK += && $$[QT_INSTALL_BINS]/windeployqt $${OUT_PWD}/debug/DkVerwaltungQt.exe

QMAKE_POST_LINK += && echo \"finished post link steps...\"

# RESOURCES += $${TARGET}.qrc
# RC_FILE += $${TARGET}.rc

QT += widgets sql network
QT += webengine webenginewidgets printsupport

# Input
HEADERS += mainform.h \
    ansparrechner.h \
    html2pdfconverter.h \
    mainwindow.h \
    personform.h \
    buchungform.h \
    dbfkts.h \
    webenginepdfviewer.h

SOURCES += main.cpp \
    $$PWD/mainform.cpp \
    ansparrechner.cpp \
    html2pdfconverter.cpp \
    mainwindow.cpp \
    personform.cpp \
    buchungform.cpp \
    dbfkts.cpp \
    webenginepdfviewer.cpp
